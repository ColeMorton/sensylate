---
import BlogCard from "@/components/BlogCard.astro";
import Share from "@/components/Share.astro";
import Disqus from "@/helpers/Disqus";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import similarItems from "@/lib/utils/similarItems";
import { humanize, markdownify, slugify } from "@/lib/utils/textConverter";
import { render } from "astro:content";
import { FaRegClock, FaRegFolder } from "react-icons/fa";
import ImageMod from "./components/ImageMod.astro";

const { post } = Astro.props;

// Determine collection type from post.collection
const collectionType = post.collection;
const COLLECTION_FOLDER = collectionType;

const posts = await getSinglePage(COLLECTION_FOLDER);
const similarPosts = similarItems(post, posts);
const { Content } = await render(post);
const { title, description, categories, image, date, tags } = post.data;

// Generate appropriate URLs based on collection type
const getCategoryUrl = (category: string) => {
  return `/categories/${slugify(category)}`;
};

const getTagUrl = (tag: string) => {
  return `/tags/${slugify(tag)}`;
};
---

<section class="section">
  <div class="container">
    <div class="row justify-center">
      <article class="lg:col-10">
        {
          image && (
            <div class="mb-10">
              <ImageMod
                src={image}
                alt={title}
                class="w-full rounded"
                format="webp"
              />
            </div>
          )
        }
        <h1 set:html={markdownify(title)} class="h2 mb-4" />
        <ul class="mb-4">
          <li class="mr-4 inline-block">
            <FaRegClock className={"-mt-1 mr-2 inline-block"} />
            {dateFormat(date)}
          </li>
          {
            categories && categories.length > 0 && (
              <li class="mr-4 inline-block">
                <FaRegFolder className={"-mt-1 mr-2 inline-block"} />
                {categories.map((category: string, index: number) => (
                  <a href={getCategoryUrl(category)}>
                    {humanize(category)}
                    {index !== categories.length - 1 && ","}
                  </a>
                ))}
              </li>
            )
          }
        </ul>
        <div class="content mb-10">
          <Content />
        </div>
        <div class="row items-start justify-between">
          <div class="mb-10 flex items-center lg:col-5 lg:mb-0">
            <h5 class="mr-3">Tags :</h5>
            <ul>
              {
                tags.map((tag: string) => (
                  <li class="inline-block">
                    <a
                      class="bg-light hover:bg-primary dark:bg-darkmode-light dark:hover:bg-darkmode-primary dark:hover:text-text-dark m-1 block rounded px-3 py-1 hover:text-white"
                      href={getTagUrl(tag)}
                    >
                      {humanize(tag)}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="flex items-center lg:col-4">
            <h5 class="mr-3">Share :</h5>
            <Share
              className="social-icons"
              title={title}
              description={description}
              slug={post.id}
            />
          </div>
        </div>
        <Disqus className="mt-20" client:load />
      </article>
    </div>

    <!-- Related posts -->
    <div class="section pb-0">
      <h2 class="h3 mb-12 text-center">Related Posts</h2>
      <div class="row justify-center">
        {
          similarPosts.map((post) => (
            <div class="mb-14 md:col-6 lg:col-4">
              <BlogCard data={post} />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
