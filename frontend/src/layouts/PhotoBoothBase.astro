---
import config from "@/config/config.json";
import theme from "@/config/theme.json";
import { plainify } from "@/lib/utils/textConverter";
import "@/styles/main.css";
import { AstroFont } from "astro-font";

// types for frontmatters
export interface Props {
  title?: string;
  meta_title?: string;
  description?: string;
  image?: string;
  noindex?: boolean;
  canonical?: string;
}

// destructure frontmatter
const { title, meta_title, description, image, noindex, canonical } =
  Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <!-- favicon -->
    <link rel="icon" type="image/x-icon" href={config.site.favicon} />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/images/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/images/favicon-16x16.png"
    />

    <!-- theme meta -->
    <meta name="theme-name" content="cole-morton" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#fff"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#000"
    />
    <meta name="generator" content={Astro.generator} />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

    <!-- local heebo font css -->
    <link rel="stylesheet" href="/fonts/heebo/heebo.css" />

    <!-- google font css for brand font only -->
    <AstroFont
      config={[
        {
          src: [],
          preload: false,
          display: "swap",
          name: "Paytone One",
          fallback: "sans-serif",
          cssVariable: "font-brand",
          googleFontsURL:
            "https://fonts.googleapis.com/css2?family=Paytone+One:wght@400&display=swap",
        },
      ]}
    />

    <!-- responsive meta -->
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <!-- title -->
    <title>
      {
        plainify(
          meta_title ? meta_title : title ? title : "Photo Booth Dashboard",
        )
      }
    </title>

    <!-- canonical url -->
    {canonical && <link rel="canonical" href={canonical} item-prop="url" />}

    <!-- Resource preload hints for critical assets -->
    <link rel="preload" href="/styles/main.css" as="style" />
    <link rel="preload" href="/fonts/heebo/heebo.css" as="style" />
    <link
      rel="preload"
      href="/fonts/heebo/heebo-400.ttf"
      as="font"
      type="font/ttf"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/heebo/heebo-600.ttf"
      as="font"
      type="font/ttf"
      crossorigin
    />

    <!-- noindex robots -->
    {noindex && <meta name="robots" content="noindex,nofollow" />}

    <!-- meta-description -->
    <meta
      name="description"
      content={plainify(
        description ? description : "Dashboard screenshot generation interface",
      )}
    />

    <!-- Initialize theme before render to prevent FOUC -->
    <script is:inline>
      const loadTheme = function () {
        // Default theme is now 'dark'
        const defaultTheme = "dark";
        const theme = localStorage.getItem("theme") || defaultTheme;
        document.documentElement.classList.toggle("dark", theme === "dark");
      };
      // Initial load
      loadTheme();
      // Listen for storage changes (cross-tab syncing)
      window.addEventListener("storage", loadTheme);
      // Listen for Astro view transitions to maintain theme
      document.addEventListener("astro:page-load", loadTheme);
      document.addEventListener("astro:after-swap", loadTheme);
    </script>

    <!-- Photo booth specific styles -->
    <style>
      /* Ensure clean screenshot environment */
      body {
        margin: 0;
        padding: 0;
        overflow-x: hidden;
      }

      /* Optimize for high-resolution screenshots */
      html,
      body {
        font-smooth: always;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        text-rendering: optimizeLegibility;
      }

      /* Photo booth ready indicator for Puppeteer */
      .photo-booth-ready {
        opacity: 1;
      }

      /* Container optimization for screenshots */
      .photo-booth-container {
        width: 100%;
        min-height: 100vh;
        padding: 2rem;
        box-sizing: border-box;
      }
    </style>
  </head>
  <body>
    <main id="main-content" class="photo-booth-ready">
      <slot />
    </main>
  </body>
</html>
