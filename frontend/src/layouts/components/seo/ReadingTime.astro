---
import { analyzeContent } from "@/lib/seo/content-analyzers.ts";

export interface Props {
  content: string;
  variant?: 'minimal' | 'detailed';
  className?: string;
}

const {
  content,
  variant = 'minimal',
  className = ''
} = Astro.props;

// Calculate reading time
const contentMetrics = analyzeContent(content);
const minutes = contentMetrics.readingTimeMinutes;
const words = contentMetrics.wordCount;

// Format time display
const timeText = minutes === 1 ? '1 min read' : `${minutes} min read`;
const detailedText = `${words} words â€¢ ${timeText}`;
---

{variant === 'minimal' && (
  <span class={`reading-time-minimal inline-flex items-center ${className}`}>
    <svg
      class="-mt-1 mr-2 inline-block"
      height="1em"
      width="1em"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      aria-hidden="true"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
      />
    </svg>
    <span aria-label={`Estimated reading time: ${timeText}`}>
      {timeText}
    </span>
  </span>
)}

{variant === 'detailed' && (
  <div class={`reading-time-detailed ${className}`}>
    <div class="flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-400">
      <span class="flex items-center">
        <svg
          class="mr-1 h-4 w-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
          />
        </svg>
        <span>{words} words</span>
      </span>

      <span class="flex items-center">
        <svg
          class="mr-1 h-4 w-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
          />
        </svg>
        <span>{timeText}</span>
      </span>
    </div>

  </div>
)}

<!-- Structured data for reading time -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "Article",
  "timeRequired": `PT${minutes}M`,
  "wordCount": words
})} />
