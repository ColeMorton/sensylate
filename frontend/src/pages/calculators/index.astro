---
import CalculatorCard from "@/components/CalculatorCard.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import PageHeader from "@/partials/PageHeader.astro";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { features } from "@/lib/featureFlags";

// Return 404 if calculators feature is disabled
if (!features.calculators) {
  return Astro.redirect("/404", 404);
}

const CALCULATORS_FOLDER = "calculators";

const calculatorsIndex = (await getEntry(
  CALCULATORS_FOLDER,
  "-index",
)) as CollectionEntry<"calculators">;

const calculators = await getSinglePage(CALCULATORS_FOLDER);
const sortedCalculators = sortByDate(calculators);

// Group calculators by category
const calculatorsByCategory = sortedCalculators.reduce(
  (acc, calc) => {
    const category = calc.data.category || "other";
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(calc);
    return acc;
  },
  {} as Record<string, typeof calculators>,
);

const categoryOrder = ["finance", "crypto", "math", "other"];
const orderedCategories = categoryOrder.filter(
  (cat) => calculatorsByCategory[cat],
);

// Add any categories not in the order
Object.keys(calculatorsByCategory).forEach((cat) => {
  if (!orderedCategories.includes(cat)) {
    orderedCategories.push(cat);
  }
});

const categoryTitles: Record<string, string> = {
  finance: "Financial Calculators",
  crypto: "Cryptocurrency Calculators",
  math: "Mathematics Calculators",
  other: "Other Calculators",
};
---

<Base
  title={calculatorsIndex.data.title}
  meta_title={calculatorsIndex.data.meta_title}
  image={calculatorsIndex.data.image}
  description={calculatorsIndex.data.description}
>
  <PageHeader title={calculatorsIndex?.data.title} />

  <section class="section">
    <div class="container mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <div class="mx-auto max-w-6xl">
        {
          calculatorsIndex.data.description && (
            <div class="content mb-14 text-center">
              <p class="text-lg">{calculatorsIndex.data.description}</p>
            </div>
          )
        }

        <div class="row">
          {
            sortedCalculators.map((calculator) => (
              <div class="mb-6 md:col-6 lg:col-4">
                <CalculatorCard data={calculator} />
              </div>
            ))
          }
        </div>

        {
          sortedCalculators.length === 0 && (
            <div class="py-10 text-center">
              <p class="text-text text-lg dark:text-gray-300">
                No calculators available yet. Check back soon!
              </p>
            </div>
          )
        }
      </div>
    </div>
  </section>
</Base>
