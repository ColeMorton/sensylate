[tool:pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage configuration
addopts = 
    --cov=scripts/services
    --cov=scripts/utils  
    --cov=scripts/macro_synthesis.py
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=85
    --strict-markers
    --strict-config
    -v
    --tb=short

# Test markers for categorization
markers =
    unit: Unit tests with mocked dependencies
    integration: Integration tests with controlled environments
    contract: Contract tests for service interfaces
    property: Property-based tests using hypothesis
    e2e: End-to-end tests with real system components
    slow: Tests that take longer than 1 second
    external: Tests requiring external API access (skip in CI)
    
# Test timeout settings
timeout = 300
timeout_method = thread

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pandas
    
# Minimum test coverage thresholds by module
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    
[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml