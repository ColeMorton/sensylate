# Command Registry - Master catalog of available team commands
# Auto-generated and maintained by Command Collaboration Framework

metadata:
  version: "2.0.0"
  last_updated: "2025-06-29T17:15:00Z"
  framework_version: "2.0.0"
  microservices_enabled: true

# Command Classifications:
# - core_product: User-facing AI commands that ARE the product (twitter-post, fundamental-analysis-full, etc.)
# - collaboration_infrastructure: Commands that enable team collaboration and product development

# Command search paths (in order of precedence)
command_paths:
  project_commands: "/Users/colemorton/Projects/sensylate/.claude/commands/"
  user_commands: "/Users/colemorton/.claude/commands/"

commands:
  architect:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/architect.md"
    scope: "project"  # user | project
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/architect/manifest.yaml"
    type: "infrastructure"
    classification: "collaboration_infrastructure"
    status: "active"
    description: "Technical planning & implementation framework with research-driven methodology"
    capabilities:
      reads: ["codebase_structure", "git_status", "dependency_files", "project_documentation"]
      produces: ["implementation_plans", "phase_summaries", "technical_specifications"]
    performance_metrics:
      avg_execution_time: "45s"
      success_rate: 0.96
      last_execution: null

  product-owner:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/product_owner.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/product-owner/manifest.yaml"
    type: "infrastructure"
    classification: "collaboration_infrastructure"
    status: "active"
    description: "Transform technical findings into prioritized product decisions"
    capabilities:
      reads: ["technical_assessments", "business_context", "stakeholder_input"]
      produces: ["prioritized_backlogs", "business_cases", "stakeholder_summaries"]
    dependencies_on: ["architect", "business-analyst", "code-owner"]
    performance_metrics:
      avg_execution_time: "30s"
      success_rate: 0.92
      last_execution: null

  code-owner:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/code-owner.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/code-owner/manifest.yaml"
    type: "infrastructure"
    classification: "collaboration_infrastructure"
    status: "active"
    description: "Comprehensive codebase health analysis and strategic technical reviews"
    capabilities:
      reads: ["source_code", "git_history", "dependencies", "documentation"]
      produces: ["health_assessments", "technical_debt_analysis", "risk_matrices"]
    performance_metrics:
      avg_execution_time: "60s"
      success_rate: 0.94
      last_execution: null

  business-analyst:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/business_analyst.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/business-analyst/manifest.yaml"
    type: "infrastructure"
    classification: "collaboration_infrastructure"
    status: "active"
    description: "Requirements gathering, process optimization, and stakeholder alignment"
    capabilities:
      reads: ["stakeholder_input", "process_documentation", "business_context"]
      produces: ["functional_specifications", "process_flows", "acceptance_criteria"]
    performance_metrics:
      avg_execution_time: "40s"
      success_rate: 0.88
      last_execution: null

  twitter-post:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/twitter_post.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/twitter-post/manifest.yaml"
    type: "product"
    classification: "core_product"
    status: "active"
    description: "Expert social media content optimization for X/Twitter engagement"
    capabilities:
      reads: ["content_input", "brand_guidelines", "engagement_metrics"]
      produces: ["optimized_posts", "engagement_analysis", "content_variants"]
    performance_metrics:
      avg_execution_time: "15s"
      success_rate: 0.98
      last_execution: null

  twitter-post-strategy:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/twitter_post_strategy.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/twitter-post-strategy/manifest.yaml"
    type: "product"
    classification: "core_product"
    status: "active"
    description: "Trading strategy analysis and social media post generation"
    capabilities:
      reads: ["trading_data", "backtest_results", "market_analysis"]
      produces: ["strategy_posts", "performance_summaries", "trading_insights"]
    performance_metrics:
      avg_execution_time: "20s"
      success_rate: 0.95
      last_execution: null

  commit-push:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/commit_push.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/commit-push/manifest.yaml"
    type: "infrastructure"
    classification: "collaboration_infrastructure"
    status: "active"
    description: "Automated git workflow (stage all changes, generate commit message, push to remote)"
    capabilities:
      reads: ["git_status", "working_directory_changes", "commit_history"]
      produces: ["git_commits", "commit_messages", "push_confirmations"]
    performance_metrics:
      avg_execution_time: "10s"
      success_rate: 0.99
      last_execution: null

  create-command:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/create_command.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/commands/create-command/manifest.yaml"
    type: "infrastructure"
    classification: "collaboration_infrastructure"
    status: "active"
    description: "Interactive command creator with validation and best practices"
    capabilities:
      reads: ["user_specifications", "existing_command_patterns", "framework_standards"]
      produces: ["new_command_files", "command_manifests", "validation_reports"]
    performance_metrics:
      avg_execution_time: "25s"
      success_rate: 0.93
      last_execution: null


  fundamental-analyst-discover:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/fundamental_analyst_discover.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/discover/manifest.yaml"
    type: "microservice"
    classification: "core_product"
    status: "active"
    description: "DASV Phase 1: Data collection and context gathering for fundamental analysis"
    microservice_role: "fundamental_analyst"
    microservice_action: "discover"
    framework: "DASV"
    capabilities:
      reads: ["market_data", "company_information", "financial_statements"]
      produces: ["structured_data", "data_quality_metrics", "discovery_report"]
    performance_metrics:
      avg_execution_time: "20s"
      success_rate: null
      last_execution: null

  fundamental-analyst-analyze:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/fundamental_analyst_analyze.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/analyze/manifest.yaml"
    type: "microservice"
    classification: "core_product"
    status: "active"
    description: "DASV Phase 2: Systematic analysis and evaluation of financial data"
    microservice_role: "fundamental_analyst"
    microservice_action: "analyze"
    framework: "DASV"
    capabilities:
      reads: ["structured_data", "discovery_report", "financial_metrics"]
      produces: ["financial_analysis", "analytical_insights", "risk_assessment"]
    performance_metrics:
      avg_execution_time: "40s"
      success_rate: null
      last_execution: null

  fundamental-analyst-synthesize:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/fundamental_analyst_synthesize.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/synthesize/manifest.yaml"
    type: "microservice"
    classification: "core_product"
    status: "active"
    description: "DASV Phase 3: Integration and recommendation generation - produces final analysis document"
    microservice_role: "fundamental_analyst"
    microservice_action: "synthesize"
    framework: "DASV"
    output_requirement: "Institutional-quality ./data/outputs/fundamental_analysis/{TICKER}_{YYYYMMDD}.md files"
    capabilities:
      reads: ["financial_analysis", "analytical_insights", "risk_assessment"]
      produces: ["fundamental_analysis_document", "investment_thesis", "recommendation"]
    performance_metrics:
      avg_execution_time: "30s"
      success_rate: null
      last_execution: null

  fundamental-analyst-validate:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/fundamental_analyst_validate.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/validate/manifest.yaml"
    type: "microservice"
    classification: "core_product"
    status: "active"
    description: "DASV Phase 4: Quality assurance and confidence verification for fundamental analysis"
    microservice_role: "fundamental_analyst"
    microservice_action: "validate"
    framework: "DASV"
    validation_approach: "institutional_quality_standards"
    capabilities:
      reads: ["fundamental_analysis_document", "investment_thesis", "recommendation"]
      produces: ["validation_report", "confidence_scores", "quality_assessment"]
    performance_metrics:
      avg_execution_time: "25s"
      success_rate: null
      last_execution: null

  fundamental-analysis-full:
    location: "/Users/colemorton/Projects/sensylate/.claude/commands/fundamental_analysis_full.md"
    scope: "project"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/workflows/fundamental_analysis_full.yaml"
    type: "workflow_orchestrator"
    classification: "core_product"
    status: "active"
    description: "Complete DASV workflow orchestrator for institutional-quality fundamental analysis"
    workflow_composition: "fundamental_analysis_full"
    workflow_type: "complete_analysis"
    framework: "DASV"
    quality_requirement: "Institutional-grade fundamental analysis with 8.5+ reliability score"
    microservices_orchestrated: ["fundamental_analyst_discover", "fundamental_analyst_analyze", "fundamental_analyst_synthesize", "fundamental_analyst_validate"]
    capabilities:
      reads: ["market_data", "financial_statements", "economic_indicators", "trading_context"]
      produces: ["fundamental_analysis_reports", "market_insights", "trading_recommendations", "validation_reports"]
    performance_metrics:
      avg_execution_time: "115s"
      success_rate: null
      last_execution: null

# Workflow patterns discovered from command analysis
workflow_patterns:
  analysis_chain:
    sequence: ["code-owner", "product-owner", "architect"]
    description: "Technical analysis → Business prioritization → Implementation planning"
    success_rate: 0.89
    avg_total_duration: "135s"
    use_cases: ["project_health_assessment", "feature_planning", "technical_debt_resolution"]

  content_creation_pipeline:
    parallel: ["twitter-post", "twitter-post-strategy"]
    description: "Parallel social media content generation for different audiences"
    trigger_events: ["trading_analysis_complete", "strategy_backtest_ready"]
    success_rate: 0.97
    avg_total_duration: "35s"

  development_workflow:
    sequence: ["architect", "commit-push"]
    description: "Implementation planning followed by automated git workflow"
    success_rate: 0.95
    avg_total_duration: "55s"

  command_creation_workflow:
    sequence: ["create-command", "architect"]
    description: "Create new command then plan its integration"
    success_rate: 0.90
    avg_total_duration: "70s"

# Role Definitions (Phase 1: fundamental_analyst)
roles:
  fundamental_analyst:
    classification: "domain_expert"
    maps_to: "core_product"
    description: "Financial analysis and valuation expert"
    microservices: ["discover", "analyze", "synthesize", "validate"]
    framework: "DASV"
    status: "active"

# Microservice Registry (Phase 1: fundamental_analyst only)
microservices:
  fundamental_analyst_discover:
    role: "fundamental_analyst"
    action: "discover"
    framework: "DASV"
    location: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/discover.md"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/discover/manifest.yaml"
    type: "product"
    classification: "core_product"
    status: "active"
    description: "Data acquisition and context gathering for fundamental analysis"
    capabilities:
      reads: ["market_data", "company_information", "financial_statements"]
      produces: ["structured_data", "data_quality_metrics", "discovery_report"]
    performance_metrics:
      avg_execution_time: "30s"
      success_rate: null
      last_execution: null

  fundamental_analyst_analyze:
    role: "fundamental_analyst"
    action: "analyze"
    framework: "DASV"
    location: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/analyze.md"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/analyze/manifest.yaml"
    type: "product"
    classification: "core_product"
    status: "active"
    description: "Systematic analysis and evaluation of financial data"
    capabilities:
      reads: ["structured_data", "discovery_report", "financial_metrics"]
      produces: ["financial_analysis", "analytical_insights", "risk_assessment"]
    performance_metrics:
      avg_execution_time: "40s"
      success_rate: null
      last_execution: null

  fundamental_analyst_synthesize:
    role: "fundamental_analyst"
    action: "synthesize"
    framework: "DASV"
    location: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/synthesize.md"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/synthesize/manifest.yaml"
    type: "product"
    classification: "core_product"
    status: "active"
    description: "Integration and recommendation generation - produces final analysis document"
    capabilities:
      reads: ["financial_analysis", "analytical_insights", "risk_assessment"]
      produces: ["fundamental_analysis_document", "investment_thesis", "recommendation"]
    output_requirement: "Institutional-quality ./data/outputs/fundamental_analysis/{TICKER}_{YYYYMMDD}.md files"
    performance_metrics:
      avg_execution_time: "30s"
      success_rate: null
      last_execution: null

  fundamental_analyst_validate:
    role: "fundamental_analyst"
    action: "validate"
    framework: "DASV"
    location: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/validate.md"
    manifest: "/Users/colemorton/Projects/sensylate/team-workspace/microservices/fundamental_analyst/validate/manifest.yaml"
    type: "product"
    classification: "core_product"
    status: "active"
    description: "Quality assurance and confidence verification for fundamental analysis"
    validation_approach: "institutional_quality_standards"
    capabilities:
      reads: ["fundamental_analysis_document", "investment_thesis", "recommendation"]
      produces: ["validation_report", "confidence_scores", "quality_assessment"]
    performance_metrics:
      avg_execution_time: "20s"
      success_rate: null
      last_execution: null

# Workflow Compositions
workflow_compositions:
  fundamental_analysis_full:
    description: "Complete fundamental analysis workflow (DASV)"
    microservices:
      - fundamental_analyst_discover
      - fundamental_analyst_analyze
      - fundamental_analyst_synthesize
      - fundamental_analyst_validate
    workflow_type: "complete_analysis"
    framework: "DASV"
    estimated_duration: "115s"
    success_rate: null
    workflow_file: "/Users/colemorton/Projects/sensylate/team-workspace/workflows/fundamental_analysis_full.yaml"
    quality_requirement: "Institutional-grade fundamental analysis with 8.5+ reliability score"
    acceptance_criteria: "Sequential DASV execution produces institutional-quality analysis with 8.5+ reliability score"

# Cross-command collaboration metrics
collaboration_metrics:
  data_sharing_frequency: "high"
  dependency_resolution_success: 0.94
  cross_command_data_usage: 0.78
  workflow_automation_level: 0.85
