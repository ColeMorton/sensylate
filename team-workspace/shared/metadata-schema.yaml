# Command Output Metadata Schema
# Standardized metadata format for all command outputs

schema_version: "1.0.0"
required_fields:
  metadata:
    type: "object"
    required: true
    properties:
      generated_by:
        type: "string"
        description: "Command name that generated this output"
        pattern: "^[a-z-]+$"
        required: true

      version:
        type: "string"
        description: "Command version that generated this output"
        pattern: "^\\d+\\.\\d+\\.\\d+$"
        required: true

      timestamp:
        type: "string"
        description: "ISO 8601 timestamp of generation"
        format: "date-time"
        required: true

      session_id:
        type: "string"
        description: "Unique session identifier"
        pattern: "^\\d{4}-\\d{2}-\\d{2}_\\d{2}-\\d{2}-\\d{2}$"
        required: true

  source_data:
    type: "object"
    required: true
    properties:
      dependencies:
        type: "array"
        description: "List of command outputs consumed"
        items:
          type: "object"
          properties:
            command:
              type: "string"
              description: "Source command name"
              required: true
            output:
              type: "string"
              description: "Specific output consumed"
              required: true
            version:
              type: "string"
              description: "Version of source output"
              required: true
            consumed_at:
              type: "string"
              format: "date-time"
              description: "When this dependency was consumed"
              required: true
            data_hash:
              type: "string"
              description: "Hash of consumed data for integrity"
              required: false

      project_context:
        type: "object"
        description: "Project state when command executed"
        properties:
          git_commit:
            type: "string"
            description: "Git commit hash at execution time"
            required: true
          files_analyzed:
            type: "integer"
            description: "Number of files analyzed"
            required: false
          working_directory:
            type: "string"
            description: "Working directory path"
            required: true

  output_specification:
    type: "object"
    required: true
    properties:
      type:
        type: "string"
        description: "Type of output produced"
        enum: ["implementation_plan", "health_assessment", "functional_spec", "social_post", "git_commit", "technical_analysis"]
        required: true

      format:
        type: "string"
        description: "Format of the output"
        enum: ["markdown", "yaml", "json", "xml", "plaintext"]
        required: true

      confidence_level:
        type: "number"
        description: "Confidence in output accuracy (0.0-1.0)"
        minimum: 0.0
        maximum: 1.0
        required: true

      completeness:
        type: "string"
        description: "Completeness level of output"
        enum: ["full", "partial", "draft", "summary"]
        required: true

      data_lineage:
        type: "array"
        description: "Trace of data transformations"
        items:
          type: "object"
          properties:
            step:
              type: "string"
              description: "Transformation step name"
            input_source:
              type: "string"
              description: "Input data source"
            transformation:
              type: "string"
              description: "Type of transformation applied"
        required: false

  collaboration_data:
    type: "object"
    required: true
    properties:
      intended_consumers:
        type: "array"
        description: "Commands expected to consume this output"
        items:
          type: "string"
        required: true

      notification_sent:
        type: "boolean"
        description: "Whether dependent commands were notified"
        required: true

      cache_expires:
        type: "string"
        format: "date-time"
        description: "When cached version expires"
        required: false

      sharing_policy:
        type: "string"
        description: "How this output should be shared"
        enum: ["immediate", "session_end", "manual", "restricted"]
        default: "immediate"
        required: true

      access_permissions:
        type: "array"
        description: "Commands allowed to access this output"
        items:
          type: "string"
        required: false

  quality_metrics:
    type: "object"
    required: true
    properties:
      validation_passed:
        type: "boolean"
        description: "Whether output passed validation checks"
        required: true

      validation_errors:
        type: "array"
        description: "List of validation errors if any"
        items:
          type: "string"
        required: false

      review_required:
        type: "boolean"
        description: "Whether human review is recommended"
        required: true

      approval_status:
        type: "string"
        description: "Approval status of the output"
        enum: ["auto-approved", "pending-review", "approved", "rejected"]
        required: true

      quality_score:
        type: "number"
        description: "Overall quality score (0.0-1.0)"
        minimum: 0.0
        maximum: 1.0
        required: false

# Validation rules
validation_rules:
  file_naming:
    pattern: "^[a-z0-9-]+\\.(md|yaml|json|txt)$"
    metadata_file: ".command-meta.yaml"
    location: "same_directory_as_output"

  metadata_integrity:
    required_checksums: true
    dependency_verification: true
    timestamp_validation: true

  collaboration_compliance:
    notification_required: true
    consumer_registration: true
    access_control: true

# Example metadata file structure
example_metadata:
  metadata:
    generated_by: "architect"
    version: "1.0.0"
    timestamp: "2025-01-07T15:30:00Z"
    session_id: "2025-01-07_15-28-45"

  source_data:
    dependencies:
      - command: "code-owner"
        output: "technical_health_matrix"
        version: "1.2.0"
        consumed_at: "2025-01-07T15:29:15Z"
        data_hash: "sha256:abc123..."
    project_context:
      git_commit: "2dc8135"
      files_analyzed: 47
      working_directory: "/Users/colemorton/Projects/sensylate"

  output_specification:
    type: "implementation_plan"
    format: "markdown"
    confidence_level: 0.92
    completeness: "full"
    data_lineage:
      - step: "codebase_analysis"
        input_source: "file_system"
        transformation: "structure_mapping"
      - step: "dependency_integration"
        input_source: "code-owner_output"
        transformation: "health_metrics_incorporation"

  collaboration_data:
    intended_consumers: ["product-owner", "business-analyst"]
    notification_sent: true
    cache_expires: "2025-01-08T15:30:00Z"
    sharing_policy: "immediate"
    access_permissions: ["product-owner", "business-analyst", "code-owner"]

  quality_metrics:
    validation_passed: true
    review_required: false
    approval_status: "auto-approved"
    quality_score: 0.94
